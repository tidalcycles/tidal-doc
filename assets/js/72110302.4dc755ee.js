"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9905],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(3117),r=(n(7294),n(3905));const o={title:"The Boot File",id:"boot-tidal"},i=void 0,l={unversionedId:"configuration/boot-tidal",id:"configuration/boot-tidal",title:"The Boot File",description:"Every time you start Tidal, the software is reading from a configuration file usually named BootTidal.hs. Generally, this file will be attached to your text editor (check the plugin you are using). Save this file somewhere safe, you will have to tweak it sometimes: changing options, adding new functionality, etc...",source:"@site/docs/configuration/boottidal.md",sourceDirName:"configuration",slug:"/configuration/boot-tidal",permalink:"/docs/configuration/boot-tidal",draft:!1,editUrl:"https://github.com/tidalcycles/tidal-doc/tree/main/docs/configuration/boottidal.md",tags:[],version:"current",lastUpdatedAt:1761109090,formattedLastUpdatedAt:"Oct 22, 2025",frontMatter:{title:"The Boot File",id:"boot-tidal"},sidebar:"docs",previous:{title:"Multi-User Tidal",permalink:"/docs/configuration/multiuser-tidal"},next:{title:"Tidal listener",permalink:"/docs/configuration/tidal-listener"}},s={},d=[{value:"Controlling Latency",id:"controlling-latency",level:2},{value:"SuperDirt running in another host",id:"superdirt-running-in-another-host",level:2}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Every time you start Tidal, the software is reading from a configuration file usually named ",(0,r.kt)("inlineCode",{parentName:"p"},"BootTidal.hs"),". Generally, this file will be attached to your text editor (check the plugin you are using). Save this file somewhere safe, you will have to tweak it sometimes: changing options, adding new functionality, etc..."),(0,r.kt)("p",null,"Some users went really far into customizing their setup: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jarmitage/jarmlib"},"Jarmlib"),". You can take a look at their work to see how to extend your configuration file by adding new aliases to it."),(0,r.kt)("p",null,"As an example, here is the ",(0,r.kt)("em",{parentName:"p"},"vanilla")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BootTidal.hs")," file used by the ",(0,r.kt)("a",{parentName:"p",href:"https://codeberg.org/uzu/tidal/src/branch/main/BootTidal.hs"},"upstream Tidal Package")," (yours may look different if you're using an earlier version - see below):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},':set -fno-warn-orphans -Wno-type-defaults -XMultiParamTypeClasses -XOverloadedStrings\n:set prompt ""\n\n-- Import all the boot functions and aliases.\nimport Sound.Tidal.Boot\n\ndefault (Rational, Integer, Double, Pattern String)\n\n-- Create a Tidal Stream with the default settings.\n-- To customize these settings, use \'mkTidalWith\' instead\ntidalInst <- mkTidal\n\n-- tidalInst <- mkTidalWith [(superdirtTarget { oLatency = 0.01 }, [superdirtShape])] (defaultConfig {cFrameTimespan = 1/50, cProcessAhead = 1/20})\n\n-- This orphan instance makes the boot aliases work!\n-- It has to go after you define \'tidalInst\'.\ninstance Tidally where tidal = tidalInst\n\n-- `enableLink` and `disableLink` can be used to toggle synchronisation using the Link protocol.\n-- Uncomment the next line to enable Link on startup.\n-- enableLink\n\n-- You can also add your own aliases in this file. For example:\n-- fastsquizzed pat = fast 2 $ pat # squiz 1.5\n\n:set prompt "tidal> "\n:set prompt-cont ""\n')),(0,r.kt)("h2",{id:"controlling-latency"},"Controlling Latency"),(0,r.kt)("p",null,"There are three configuration values which relate to latency: ",(0,r.kt)("inlineCode",{parentName:"p"},"cProcessAhead"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cFrameTimespan"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"oLatency"),". Here's an example configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"tidalInst <- mkTidalWith [(superdirtTarget { oLatency = 0.05 }, [superdirtShape])] (defaultConfig {cFrameTimespan = 1/20, cProcessAhead = 3/10})\n")),(0,r.kt)("p",null,"If you are running an earlier version of tidal, your BootTidal.hs file will look different. You can still configure the same settings by changing a line that looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hs"},'tidal <- startTidal (superdirtTarget {oLatency = 0.05, oAddress = "127.0.0.1", oPort = 57120}) (defaultConfig {cVerbose = True, cFrameTimespan = 1/20, cProcessAhead = 3/10})\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Frame timespan"),": This is the duration of Tidal's calculation window in seconds. The default is ",(0,r.kt)("inlineCode",{parentName:"p"},"0.05 seconds"),", in other words a calculation rate of 20 frames per second. If you find Tidal is using too much CPU, increasing the frame timespan will probably help. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Latency"),": This parameter lets you account for the time a target takes to produce a sound. For example, we might need SuperDirt to schedule the event 100 ms before it should hit the speaker. A higher latency parameter will move the sound earlier in time. The default is ",(0,r.kt)("inlineCode",{parentName:"p"},"0.05 seconds"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Process Ahead"),": This parameter controls how far ahead Tidal will start processing events. It might need to be adjusted when a high latency value is set. Adjust this value if you get late messages in SuperCollider. The default is ",(0,r.kt)("inlineCode",{parentName:"p"},"0.3 seconds"),"."))),(0,r.kt)("h2",{id:"superdirt-running-in-another-host"},"SuperDirt running in another host"),(0,r.kt)("p",null,"If you're running ",(0,r.kt)("strong",{parentName:"p"},"SuperDirt")," on another host (perhaps, in a multi-user setup), you need to define this in a similar fashion as with the latency, except in this case the keyname is ",(0,r.kt)("inlineCode",{parentName:"p"},"oAddress"),", giving the IP address or hostname. For example if you are running SuperDirt on another computer that has the IP adress 192.168.0.23, you would do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'tidalInst <- mkTidalWith [(superdirtTarget { oAddress = "192.168.0.23", oPort = 57120 }, [superdirtShape])] (defaultConfig {cCtrlAddr = "0.0.0.0"})\n')),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"cCtrlAddr")," also needs to be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"0.0.0.0"),", as shown above, otherwise Tidal will not be able to send messages across a network. To explain; the ",(0,r.kt)("inlineCode",{parentName:"p"},"cCtrlAddr")," control address is used both for receiving and sending network messages (using the Open Sound Control protocol). Setting it to ",(0,r.kt)("inlineCode",{parentName:"p"},"0.0.0.0")," means that Tidal will be able to send and receive messages on any network that your computer is connected to (by default it will only send/receive to other programs running on your local computer and not across the a local network or the wider internet)."),(0,r.kt)("p",null,"In case you need to alter multiple settings for ",(0,r.kt)("inlineCode",{parentName:"p"},"superdirtTarget"),", just separate them by a comma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'{oAddress = "1.2.3.4", oLatency = 0.04}\n')),(0,r.kt)("p",null,"Note that in ",(0,r.kt)("strong",{parentName:"p"},"Emacs")," (and possibly other editor) configuration files, you'll need to escape the quotation marks."),(0,r.kt)("p",null,"You will also need to configure ",(0,r.kt)("strong",{parentName:"p"},"SuperDirt")," to accept messages coming from another host. For example, starting ",(0,r.kt)("strong",{parentName:"p"},"Dirt")," like this will tell listen for OSC messages on all network interfaces:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'~dirt.start(57120, [0, 0], NetAddr("0.0.0.0"));\n')))}p.isMDXComponent=!0}}]);